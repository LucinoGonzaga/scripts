# ###########################################################################
# Esse é um arquivo pessoal onde irei registrar alguns comandos importantes #
# ###########################################################################


=============================================================================
Comandos para o Github
=============================================================================
############### Ambiente de desenvovlimento ############### 

# Criar diretório do projeto:		mkdir projeto...
# Clonar o projeto:			git clone https://github.com/LucinoGonzaga/curso_laravel_5.3.git
# Mudar para branch MAIN: 		git checkout main
# Atualizar branch MAIN:			git pull origin master
# Criar branch:				git checkout -b qualquer-nome

# Exibir modificações			git status
# Adicionar alterações			git add nome_do_arquivo
# Adicionar alterações			git add .
# Comentando o pacote			git commit -m “mensagem”
# Enviar branch para o servidor		git push

############### Ambiente de Homologação ###############
# Acessar servidor de homologação
# Atualizar o servidor de homologacao:	git remote update && git fetch
# Verifique em qual branch voce esta: 	git branch
# Mudar branch:				git checkout mantis-0000 (# Criar branch: 			git checkout -t origin/mantis-0000)
# Atualizar branch:			git pull origin mantis-0000

############### Ambiente de desenvovlimento ############### 
# Mudar para branch MAIN:		git checkout master
# Atualizar branch MAIN: 		git pull origin master
# Mudar para branch "mantis-0000": 	git checkout mantis-0000
# Mesclager com o branch MAIN:		git merge master
# Caso haja CONFLITOS resolva-os e comite as alterações novamente: Instruções tópico 1
# Mudar para branch MAIN:		git checkout master
# Mesclar com o branch da demanda:	git merge mantis-0000 --squash
# Faça commit das alterações:		git commit -m "mantis-0000"

# Se coloque no branch MASTER: git checkout master
# Atualize o branch MASTER: git pull origin master
# Envie as alterações para o branch REMOTO: git push origin master

############### Ambiente de Homologação ###############
# Acesse o servidor de homologação
# Se coloque no branch MASTER: 		git checkout master
# Atualizar com o MAIN:		 	git pull origin master

############### Ambiente de Produção ###############
# Acesse o servidor
# Atualize branch MASTER: 		git pull origin master
# Visualize as tags: 			git tag -n
# Adicione uma nova tag:		git tag -a vX.X.X -m "mantis-0000"

=============================================================================
Comandos para o Docker:
=============================================================================
# Visualiza os containers em execução
sudo docker container ls

# Inspeciona os dados de um container (ip, mac, portas)
docker container inspect 5e7a935fc552

# Realiza o acesso ao terminal do container
sudo docker exec -it 5e7a935fc552 bash

# Reiniciar os container
docker-compose restart

# Após mudar a versão do PHP executar
sudo docker-compose build --no-cache php-fpm
